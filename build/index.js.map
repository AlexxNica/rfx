{"version":3,"sources":["../source/index.js"],"names":[],"mappings":";;;;;;QAAO,SAAS;;AAEhB,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,IAA2B,EAAK;MAA9B,KAAK,GAAP,IAA2B,CAAzB,KAAK;MAAE,OAAO,GAAhB,IAA2B,CAAlB,OAAO;MAAE,OAAO,GAAzB,IAA2B,CAAT,OAAO;;AACzC,SAAO,YAAa;sCAAT,IAAI;AAAJ,UAAI;;;AACb,QAAI,CAAC,KAAK,kBAAI,IAAI,CAAC,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;AACpD,aAAO,CAAC,EAAE,IAAI,EAAJ,IAAI,EAAE,OAAO,EAAP,OAAO,EAAE,CAAC,CAAC;KAC5B;GACF,CAAC;CACH,CAAC;;AAEF,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,KAAwC,EAAK;MAA3C,WAAW,GAAb,KAAwC,CAAtC,WAAW;MAAE,KAAK,GAApB,KAAwC,CAAzB,KAAK;MAAE,OAAO,GAA7B,KAAwC,CAAlB,OAAO;MAAE,OAAO,GAAtC,KAAwC,CAAT,OAAO;;AACxD,SAAO,WAAW,GAChB,OAAO,KAAK,KAAK,UAAU,GACzB,QAAQ,CAAC,EAAE,KAAK,EAAL,KAAK,EAAE,OAAO,EAAP,OAAO,EAAE,OAAO,EAAP,OAAO,EAAE,CAAC,GACrC,IAAI,GACN,IAAI,CAAC;CACR,CAAC;;AAEF,IAAM,GAAG,GAAG,SAAN,GAAG,GAAqB;MAAjB,OAAO,yDAAG,EAAE;MACf,IAAI,GAAc,OAAO,CAAzB,IAAI;MAAE,OAAO,GAAK,OAAO,CAAnB,OAAO;;AAErB,MAAM,WAAW,GAAG,OAAO,IACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC;;AAExC,MAAM,KAAK,GAAG,UAAU,CAAC,EAAE,WAAW,EAAX,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAP,OAAO,EAAE,OAAO,EAAP,OAAO,EAAE,CAAC,CAAC;;AAEzE,SAAO,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,GAAW;QACjC,EAAE,GAAK,OAAO,CAAd,EAAE;;AACV,QAAI,OAAO,KAAK,KAAK,UAAU,EAAE,KAAK,4BAAS,CAAC;AAChD,WAAO,EAAE,4BAAS,CAAC;GACpB,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;CAChB,CAAC;;qBAEa,GAAG","file":"index.js","sourcesContent":["import 'core-js';\n\nconst runCheck = ({ rtype, onError, options }) => {\n  return (...args) => {\n    if (!rtype(...args) && typeof onError === 'function') {\n      onError({ args, options });\n    }\n  };\n};\n\nconst buildCheck = ({ shouldCheck, rtype, onError, options }) => {\n  return shouldCheck ?\n    typeof rtype === 'function' ?\n      runCheck({ rtype, onError, options }) :\n      null :\n    null;\n};\n\nconst rfx = (options = {}) => {\n  const { type, onError } = options;\n\n  const shouldCheck = process &&\n    process.env.NODE_ENV !== 'production';\n\n  const check = buildCheck({ shouldCheck, rtype: type, onError, options });\n\n  return Object.assign(function fx (...args) {\n    const { fn } = options;\n    if (typeof check === 'function') check(...args);\n    return fn(...args);\n  }, options.fn);\n};\n\nexport default rfx;\n"]}